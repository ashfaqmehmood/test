name: Windows Server 2019

on: 
  workflow_dispatch:

jobs:
  build:
    name: Windows 10 Build
    runs-on: windows-latest
    timeout-minutes: 9999
    
    steps:
    - name: Creating Local User
      run: |
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $Env:WINDOWS_USER_PASSWORD -Force)
      env:
        WINDOWS_USER_PASSWORD: ${{ secrets.WINDOWS_USER_PASSWORD }}

    - name: Download Required Files
      run: |
        Invoke-WebRequest https://github.com/ashfaqmehmood/test/blob/main/assets/ngrok.exe?raw=true -OutFile ngrok.exe
        Invoke-WebRequest https://github.com/ashfaqmehmood/test/blob/main/assets/nssm.exe?raw=true -OutFile nssm.exe
        Invoke-WebRequest https://raw.githubusercontent.com/ashfaqmehmood/test/main/resources/ngrok-user.bat -OutFile ngrok-user.bat
        Invoke-WebRequest https://raw.githubusercontent.com/ashfaqmehmood/test/main/resources/ngrok-start.bat -OutFile ngrok-start.bat
        Invoke-WebRequest https://raw.githubusercontent.com/ashfaqmehmood/test/main/resources/ngrok-loop.bat -OutFile ngrok-loop.bat

    - name: Copy NSSM & Ngrok to Windows Directory
      run: | 
        copy nssm.exe C:\Windows\System32
        copy ngrok.exe C:\Windows\System32

    - name: Auth NGROK
      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Create NGROK Configuration
      run: |
        @"
        region: us
        tunnels:
          default:
            proto: tcp
            addr: 3389
        "@ | Out-File -FilePath C:\Windows\System32\ngrok.yml -Encoding ASCII

    - name: Install NGROK Service
      run: |
        nssm install ngrok C:\Windows\System32\ngrok.exe start --all --log=C:\ngrok.log --log-format=json --config="C:\Windows\System32\ngrok.yml"
        nssm set ngrok AppStdout C:\ngrok_stdout.log
        nssm set ngrok AppStderr C:\ngrok_stderr.log

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Restart NGROK Service
      run: |
        sc stop ngrok
        Start-Sleep -Seconds 5
        sc start ngrok
        Start-Sleep -Seconds 5
        sc query ngrok

    - name: Check NGROK Configuration
      run: type C:\Windows\System32\ngrok.yml

    - name: Temporarily Disable Windows Firewall
      run: netsh advfirewall set allprofiles state off

    - name: Check NGROK Logs and Process
      run: |
        if (Test-Path C:\ngrok.log) { Get-Content C:\ngrok.log }
        if (Test-Path C:\ngrok_stdout.log) { Get-Content C:\ngrok_stdout.log }
        if (Test-Path C:\ngrok_stderr.log) { Get-Content C:\ngrok_stderr.log }
        Get-Process | Where-Object {$_.Name -eq "ngrok"} | Format-List

    - name: Manual NGROK Start (if service fails)
      run: |
        $ngrokStatus = sc query ngrok
        if ($ngrokStatus -match "STOPPED") {
          Write-Host "NGROK service is stopped. Attempting manual start..."
          C:\Windows\System32\ngrok.exe start --all --config="C:\Windows\System32\ngrok.yml" --log=stdout
        } else {
          Write-Host "NGROK service status:"
          $ngrokStatus
        }

    - name: Get Connection Information
      run: cmd /c ngrok-user.bat

    - name: Keep Alive
      run: cmd /c ngrok-loop.bat
